---
import Button from "./Button.astro";
import { Icon } from "astro-icon/components";
---

<Button variant="ghost" size="icon" id="darkmode-btn">
  <Icon name="mdi:weather-sunny" class="w-[20px] h-5 sunny hidden" />
  <Icon name="mdi:weather-night" class="w-[20px] h-5 night" />
</Button>
<script>
  function set(mode: "dark" | "light") {
    if (mode === "light") {
      html.classList.remove("dark");
    } else {
      html.classList.add("dark");
    }
    localStorage.setItem("color-scheme", mode);
  }
  function ani(event: MouseEvent, mode: "dark" | "light") {
    const isAppearanceTransition =
      // @ts-expect-error experimental API
      document.startViewTransition &&
      !window.matchMedia("(prefers-reduced-motion: reduce)").matches;
    if (!isAppearanceTransition) {
      set(mode);
      return;
    }
    const x = event.clientX;
    const y = event.clientY;
    const endRadius = Math.hypot(
      Math.max(x, innerWidth - x),
      Math.max(y, innerHeight - y),
    );
    // @ts-expect-error: Transition API
    const transition = document.startViewTransition(() => set(mode));
    transition.ready.then(() => {
      const clipPath = [
        `circle(0px at ${x}px ${y}px)`,
        `circle(${endRadius}px at ${x}px ${y}px)`,
      ];
      document.documentElement.animate(
        {
          clipPath: mode === "dark" ? [...clipPath].reverse() : clipPath,
        },
        {
          duration: 400,
          easing: "ease-out",
          pseudoElement:
            mode === "dark"
              ? "::view-transition-old(root)"
              : "::view-transition-new(root)",
        },
      );
    });
  }
  const ele = document.getElementById("darkmode-btn")!;
  const html = document.getElementsByTagName("html")[0];
  const prefersDark = window.matchMedia?.(
    "(prefers-color-scheme: dark)",
  ).matches;
  const setting = localStorage.getItem("color-scheme") || "auto";
  if (setting === "dark" || (prefersDark && setting !== "light")) {
    set("dark");
  }
  ele.addEventListener("click", (e) => {
    const isDark = html.classList.contains("dark");
    const mode = isDark ? "light" : "dark";
    ani(e, mode);
  });
</script>
<style>
  html.dark .sunny {
    display: block;
  }
  html.dark .night {
    display: none;
  }
</style>
